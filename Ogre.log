01:48:41: Creating resource group General
01:48:41: Creating resource group Internal
01:48:41: Creating resource group Autodetect
01:48:41: SceneManagerFactory for type 'DefaultSceneManager' registered.
01:48:41: Registering ResourceManager for type Material
01:48:41: Registering ResourceManager for type Mesh
01:48:41: Registering ResourceManager for type Skeleton
01:48:41: MovableObjectFactory for type 'ParticleSystem' registered.
01:48:41: ArchiveFactory for archive type FileSystem registered.
01:48:41: ArchiveFactory for archive type Zip registered.
01:48:41: ArchiveFactory for archive type EmbeddedZip registered.
01:48:41: DDS codec registering
01:48:41: FreeImage version: 3.15.4
01:48:41: This program uses FreeImage, a free, open source image library supporting all common bitmap formats. See http://freeimage.sourceforge.net for details
01:48:41: Supported formats: bmp,ico,jpg,jif,jpeg,jpe,jng,koa,iff,lbm,mng,pbm,pbm,pcd,pcx,pgm,pgm,png,ppm,ppm,ras,tga,targa,tif,tiff,wap,wbmp,wbm,psd,cut,xbm,xpm,gif,hdr,g3,sgi,exr,j2k,j2c,jp2,pfm,pct,pict,pic,3fr,arw,bay,bmq,cap,cine,cr2,crw,cs1,dc2,dcr,drf,dsc,dng,erf,fff,ia,iiq,k25,kc2,kdc,mdc,mef,mos,mrw,nef,nrw,orf,pef,ptx,pxn,qtk,raf,raw,rdc,rw2,rwl,rwz,sr2,srf,srw,sti
01:48:41: Registering ResourceManager for type HighLevelGpuProgram
01:48:41: Registering ResourceManager for type Compositor
01:48:41: MovableObjectFactory for type 'Entity' registered.
01:48:41: MovableObjectFactory for type 'Light' registered.
01:48:41: MovableObjectFactory for type 'BillboardSet' registered.
01:48:41: MovableObjectFactory for type 'ManualObject' registered.
01:48:41: MovableObjectFactory for type 'BillboardChain' registered.
01:48:41: MovableObjectFactory for type 'RibbonTrail' registered.
01:48:41: Loading library /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL
01:48:41: Installing plugin: GL RenderSystem
01:48:41: OpenGL Rendering Subsystem created.
01:48:41: Plugin successfully installed
01:48:41: *-*-* OGRE Initialising
01:48:41: *-*-* Version 1.9.0 (Ghadamon)
01:48:41: Creating resource group Fonts
01:48:41: Added resource location 'media/fonts' of type 'FileSystem' to resource group 'Fonts'
01:48:41: Added resource location 'media' of type 'FileSystem' to resource group 'General'
01:48:41: Added resource location 'media/Pj' of type 'FileSystem' to resource group 'General'
01:48:41: Added resource location 'media/Ghost' of type 'FileSystem' to resource group 'General'
01:48:41: Added resource location 'media/Tablero' of type 'FileSystem' to resource group 'General'
01:48:41: Added resource location 'media/Skybox' of type 'FileSystem' to resource group 'General'
01:48:41: Added resource location 'media/Ray' of type 'FileSystem' to resource group 'General'
01:48:41: Added resource location 'media/Music' of type 'FileSystem' to resource group 'General'
01:48:41: Added resource location 'media/xml_schemas' of type 'FileSystem' to resource group 'General'
01:48:41: Creating resource group Imagesets
01:48:41: Added resource location 'media/imagesets' of type 'FileSystem' to resource group 'Imagesets'
01:48:41: Creating resource group Layouts
01:48:41: Added resource location 'media/layouts' of type 'FileSystem' to resource group 'Layouts'
01:48:41: Creating resource group LookNFeel
01:48:41: Added resource location 'media/looknfeel' of type 'FileSystem' to resource group 'LookNFeel'
01:48:41: Creating resource group Schemes
01:48:41: Added resource location 'media/schemes' of type 'FileSystem' to resource group 'Schemes'
01:48:41: CPU Identifier & Features
01:48:41: -------------------------
01:48:41:  *   CPU ID: GenuineIntel: Intel(R) Core(TM) i5-4200H CPU @ 2.80GHz
01:48:41:  *      SSE: yes
01:48:41:  *     SSE2: yes
01:48:41:  *     SSE3: yes
01:48:41:  *      MMX: yes
01:48:41:  *   MMXEXT: yes
01:48:41:  *    3DNOW: no
01:48:41:  * 3DNOWEXT: no
01:48:41:  *     CMOV: yes
01:48:41:  *      TSC: yes
01:48:41:  *      FPU: yes
01:48:41:  *      PRO: yes
01:48:41:  *       HT: no
01:48:41: -------------------------
01:48:41: ******************************
*** Starting GLX Subsystem ***
******************************
01:48:41: Registering ResourceManager for type Texture
01:48:41: GLRenderSystem::_createRenderWindow "Game State Example", 1200x800 windowed  miscParams: FSAA=0 displayFrequency=60 Hz gamma= vsync= 
01:48:41: GLXWindow::create used FBConfigID = 238
01:48:41: GL_VERSION = 4.4.0 NVIDIA 340.96
01:48:41: GL_VENDOR = NVIDIA Corporation
01:48:41: GL_RENDERER = GeForce 840M/PCIe/SSE2
01:48:41: GL_EXTENSIONS = GL_AMD_multi_draw_indirect GL_AMD_seamless_cubemap_per_texture GL_ARB_arrays_of_arrays GL_ARB_base_instance GL_ARB_bindless_texture GL_ARB_blend_func_extended GL_ARB_buffer_storage GL_ARB_clear_buffer_object GL_ARB_clear_texture GL_ARB_color_buffer_float GL_ARB_compatibility GL_ARB_compressed_texture_pixel_storage GL_ARB_conservative_depth GL_ARB_compute_shader GL_ARB_compute_variable_group_size GL_ARB_copy_buffer GL_ARB_copy_image GL_ARB_debug_output GL_ARB_depth_buffer_float GL_ARB_depth_clamp GL_ARB_depth_texture GL_ARB_draw_buffers GL_ARB_draw_buffers_blend GL_ARB_draw_indirect GL_ARB_draw_elements_base_vertex GL_ARB_draw_instanced GL_ARB_enhanced_layouts GL_ARB_ES2_compatibility GL_ARB_ES3_compatibility GL_ARB_explicit_attrib_location GL_ARB_explicit_uniform_location GL_ARB_fragment_coord_conventions GL_ARB_fragment_layer_viewport GL_ARB_fragment_program GL_ARB_fragment_program_shadow GL_ARB_fragment_shader GL_ARB_framebuffer_no_attachments GL_ARB_framebuffer_object GL_ARB_framebuffer_sRGB GL_ARB_geometry_shader4 GL_ARB_get_program_binary GL_ARB_gpu_shader5 GL_ARB_gpu_shader_fp64 GL_ARB_half_float_pixel GL_ARB_half_float_vertex GL_ARB_imaging GL_ARB_indirect_parameters GL_ARB_instanced_arrays GL_ARB_internalformat_query GL_ARB_internalformat_query2 GL_ARB_invalidate_subdata GL_ARB_map_buffer_alignment GL_ARB_map_buffer_range GL_ARB_multi_bind GL_ARB_multi_draw_indirect GL_ARB_multisample GL_ARB_multitexture GL_ARB_occlusion_query GL_ARB_occlusion_query2 GL_ARB_pixel_buffer_object GL_ARB_point_parameters GL_ARB_point_sprite GL_ARB_program_interface_query GL_ARB_provoking_vertex GL_ARB_robust_buffer_access_behavior GL_ARB_robustness GL_ARB_sample_shading GL_ARB_sampler_objects GL_ARB_seamless_cube_map GL_ARB_seamless_cubemap_per_texture GL_ARB_separate_shader_objects GL_ARB_shader_atomic_counters GL_ARB_shader_bit_encoding GL_ARB_shader_draw_parameters GL_ARB_shader_group_vote GL_ARB_shader_image_load_store GL_ARB_shader_image_size GL_ARB_shader_objects GL_ARB_shader_precision GL_ARB_query_buffer_object GL_ARB_shader_storage_buffer_object GL_ARB_shader_subroutine GL_ARB_shader_texture_lod GL_ARB_shading_language_100 GL_ARB_shading_language_420pack GL_ARB_shading_language_include GL_ARB_shading_language_packing GL_ARB_shadow GL_ARB_sparse_texture GL_ARB_stencil_texturing GL_ARB_sync GL_ARB_tessellation_shader GL_ARB_texture_border_clamp GL_ARB_texture_buffer_object GL_ARB_texture_buffer_object_rgb32 GL_ARB_texture_buffer_range GL_ARB_texture_compression GL_ARB_texture_compression_bptc GL_ARB_texture_compression_rgtc GL_ARB_texture_cube_map GL_ARB_texture_cube_map_array GL_ARB_texture_env_add GL_ARB_texture_env_combine GL_ARB_texture_env_crossbar GL_ARB_texture_env_dot3 GL_ARB_texture_float GL_ARB_texture_gather GL_ARB_texture_mirror_clamp_to_edge GL_ARB_texture_mirrored_repeat GL_ARB_texture_multisample GL_ARB_texture_non_power_of_two GL_ARB_texture_query_levels GL_ARB_texture_query_lod GL_ARB_texture_rectangle GL_ARB_texture_rg GL_ARB_texture_rgb10_a2ui GL_ARB_texture_stencil8 GL_ARB_texture_storage GL_ARB_texture_storage_multisample GL_ARB_texture_swizzle GL_ARB_texture_view GL_ARB_timer_query GL_ARB_transform_feedback2 GL_ARB_transform_feedback3 GL_ARB_transform_feedback_instanced GL_ARB_transpose_matrix GL_ARB_uniform_buffer_object GL_ARB_vertex_array_bgra GL_ARB_vertex_array_object GL_ARB_vertex_attrib_64bit GL_ARB_vertex_attrib_binding GL_ARB_vertex_buffer_object GL_ARB_vertex_program GL_ARB_vertex_shader GL_ARB_vertex_type_10f_11f_11f_rev GL_ARB_vertex_type_2_10_10_10_rev GL_ARB_viewport_array GL_ARB_window_pos GL_ATI_draw_buffers GL_ATI_texture_float GL_ATI_texture_mirror_once GL_S3_s3tc GL_EXT_texture_env_add GL_EXT_abgr GL_EXT_bgra GL_EXT_bindable_uniform GL_EXT_blend_color GL_EXT_blend_equation_separate GL_EXT_blend_func_separate GL_EXT_blend_minmax GL_EXT_blend_subtract GL_EXT_compiled_vertex_array GL_EXT_Cg_shader GL_EXT_depth_bounds_test GL_EXT_direct_state_access GL_EXT_draw_buffers2 GL_EXT_draw_instanced GL_EXT_draw_range_elements GL_EXT_fog_coord GL_EXT_framebuffer_blit GL_EXT_framebuffer_multisample GL_EXTX_framebuffer_mixed_formats GL_EXT_framebuffer_multisample_blit_scaled GL_EXT_framebuffer_object GL_EXT_framebuffer_sRGB GL_EXT_geometry_shader4 GL_EXT_gpu_program_parameters GL_EXT_gpu_shader4 GL_EXT_multi_draw_arrays GL_EXT_packed_depth_stencil GL_EXT_packed_float GL_EXT_packed_pixels GL_EXT_pixel_buffer_object GL_EXT_point_parameters GL_EXT_provoking_vertex GL_EXT_rescale_normal GL_EXT_secondary_color GL_EXT_separate_shader_objects GL_EXT_separate_specular_color GL_EXT_shader_image_load_formatted GL_EXT_shader_image_load_store GL_EXT_shader_integer_mix GL_EXT_shadow_funcs GL_EXT_stencil_two_side GL_EXT_stencil_wrap GL_EXT_texture3D GL_EXT_texture_array GL_EXT_texture_buffer_object GL_EXT_texture_compression_dxt1 GL_EXT_texture_compression_latc GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc GL_EXT_texture_cube_map GL_EXT_texture_edge_clamp GL_EXT_texture_env_combine GL_EXT_texture_env_dot3 GL_EXT_texture_filter_anisotropic GL_EXT_texture_integer GL_EXT_texture_lod GL_EXT_texture_lod_bias GL_EXT_texture_mirror_clamp GL_EXT_texture_object GL_EXT_texture_shared_exponent GL_EXT_texture_sRGB GL_EXT_texture_sRGB_decode GL_EXT_texture_storage GL_EXT_texture_swizzle GL_EXT_timer_query GL_EXT_transform_feedback2 GL_EXT_vertex_array GL_EXT_vertex_array_bgra GL_EXT_vertex_attrib_64bit GL_EXT_x11_sync_object GL_EXT_import_sync_object GL_IBM_rasterpos_clip GL_IBM_texture_mirrored_repeat GL_KHR_debug GL_KTX_buffer_region GL_NV_bindless_multi_draw_indirect GL_NV_bindless_multi_draw_indirect_count GL_NV_bindless_texture GL_NV_blend_equation_advanced GL_NV_blend_equation_advanced_coherent GL_NV_blend_square GL_NV_compute_program5 GL_NV_conditional_render GL_NV_copy_depth_to_color GL_NV_copy_image GL_NV_depth_buffer_float GL_NV_depth_clamp GL_NV_draw_texture GL_NV_ES1_1_compatibility GL_NV_ES3_1_compatibility GL_NV_explicit_multisample GL_NV_fence GL_NV_float_buffer GL_NV_fog_distance GL_NV_fragment_program GL_NV_fragment_program_option GL_NV_fragment_program2 GL_NV_framebuffer_multisample_coverage GL_NV_geometry_shader4 GL_NV_gpu_program4 GL_NV_gpu_program4_1 GL_NV_gpu_program5 GL_NV_gpu_program5_mem_extended GL_NV_gpu_program_fp64 GL_NV_gpu_shader5 GL_NV_half_float GL_NV_light_max_exponent GL_NV_multisample_coverage GL_NV_multisample_filter_hint GL_NV_occlusion_query GL_NV_packed_depth_stencil GL_NV_parameter_buffer_object GL_NV_parameter_buffer_object2 GL_NV_path_rendering GL_NV_pixel_data_range GL_NV_point_sprite GL_NV_primitive_restart GL_NV_register_combiners GL_NV_register_combiners2 GL_NV_shader_atomic_counters GL_NV_shader_atomic_float GL_NV_shader_atomic_int64 GL_NV_shader_buffer_load GL_NV_shader_storage_buffer_object GL_NV_texgen_reflection GL_NV_texture_barrier GL_NV_texture_compression_vtc GL_NV_texture_env_combine4 GL_NV_texture_expand_normal GL_NV_texture_multisample GL_NV_texture_rectangle GL_NV_texture_shader GL_NV_texture_shader2 GL_NV_texture_shader3 GL_NV_transform_feedback GL_NV_transform_feedback2 GL_NV_vdpau_interop GL_NV_vertex_array_range GL_NV_vertex_array_range2 GL_NV_vertex_attrib_integer_64bit GL_NV_vertex_buffer_unified_memory GL_NV_vertex_program GL_NV_vertex_program1_1 GL_NV_vertex_program2 GL_NV_vertex_program2_option GL_NV_vertex_program3 GL_NVX_conditional_render GL_NVX_gpu_memory_info GL_NVX_nvenc_interop GL_NV_shader_thread_group GL_NV_shader_thread_shuffle GL_KHR_blend_equation_advanced GL_KHR_blend_equation_advanced_coherent GL_SGIS_generate_mipmap GL_SGIS_texture_lod GL_SGIX_depth_texture GL_SGIX_shadow GL_SUN_slice_accum 
01:48:41: Supported GLX extensions: GLX_EXT_visual_info GLX_EXT_visual_rating GLX_SGIX_fbconfig GLX_SGIX_pbuffer GLX_SGI_video_sync GLX_SGI_swap_control GLX_EXT_swap_control GLX_EXT_swap_control_tear GLX_EXT_texture_from_pixmap GLX_EXT_buffer_age GLX_ARB_create_context GLX_ARB_create_context_profile GLX_EXT_create_context_es_profile GLX_EXT_create_context_es2_profile GLX_ARB_create_context_robustness GLX_NV_delay_before_swap GLX_EXT_stereo_tree GLX_ARB_multisample GLX_NV_float_buffer GLX_ARB_fbconfig_float GLX_EXT_framebuffer_sRGB GLX_ARB_get_proc_address 
01:48:41: ***************************
01:48:41: *** GL Renderer Started ***
01:48:41: ***************************
01:48:41: Registering ResourceManager for type GpuProgram
01:48:41: GLSL support detected
01:48:41: GL: Using GL_EXT_framebuffer_object for rendering to textures (best)
01:48:41: FBO PF_UNKNOWN depth/stencil support: D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_L8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_A8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_A4L4 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_BYTE_LA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_R5G6B5 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_B5G6R5 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_A4R4G4B4 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_A1R5G5B5 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_R8G8B8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_B8G8R8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_A8R8G8B8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_B8G8R8A8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_A2R10G10B10 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_A2B10G10R10 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_FLOAT16_RGB depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_FLOAT16_RGBA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_FLOAT32_RGB depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_FLOAT32_RGBA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_X8R8G8B8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_X8B8G8R8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_SHORT_RGBA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_R3G3B2 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_FLOAT16_R depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_FLOAT32_R depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_FLOAT16_GR depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_FLOAT32_GR depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: FBO PF_SHORT_RGB depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
01:48:41: [GL] : Valid FBO targets PF_UNKNOWN PF_L8 PF_A8 PF_A4L4 PF_BYTE_LA PF_R5G6B5 PF_B5G6R5 PF_A4R4G4B4 PF_A1R5G5B5 PF_R8G8B8 PF_B8G8R8 PF_A8R8G8B8 PF_B8G8R8A8 PF_A2R10G10B10 PF_A2B10G10R10 PF_FLOAT16_RGB PF_FLOAT16_RGBA PF_FLOAT32_RGB PF_FLOAT32_RGBA PF_X8R8G8B8 PF_X8B8G8R8 PF_SHORT_RGBA PF_R3G3B2 PF_FLOAT16_R PF_FLOAT32_R PF_FLOAT16_GR PF_FLOAT32_GR PF_SHORT_RGB 
01:48:41: RenderSystem capabilities
01:48:41: -------------------------
01:48:41: RenderSystem Name: OpenGL Rendering Subsystem
01:48:41: GPU Vendor: nvidia
01:48:41: Device Name: GeForce 840M/PCIe/SSE2
01:48:41: Driver Version: 4.4.0.0
01:48:41:  * Fixed function pipeline: yes
01:48:41:  * Hardware generation of mipmaps: yes
01:48:41:  * Texture blending: yes
01:48:41:  * Anisotropic texture filtering: yes
01:48:41:  * Dot product texture operation: yes
01:48:41:  * Cube mapping: yes
01:48:41:  * Hardware stencil buffer: yes
01:48:41:    - Stencil depth: 8
01:48:41:    - Two sided stencil support: yes
01:48:41:    - Wrap stencil values: yes
01:48:41:  * Hardware vertex / index buffers: yes
01:48:41:  * Vertex programs: yes
01:48:41:  * Number of floating-point constants for vertex programs: 1024
01:48:41:  * Number of integer constants for vertex programs: 0
01:48:41:  * Number of boolean constants for vertex programs: 0
01:48:41:  * Fragment programs: yes
01:48:41:  * Number of floating-point constants for fragment programs: 512
01:48:41:  * Number of integer constants for fragment programs: 0
01:48:41:  * Number of boolean constants for fragment programs: 0
01:48:41:  * Geometry programs: yes
01:48:41:  * Number of floating-point constants for geometry programs: 2048
01:48:41:  * Number of integer constants for geometry programs: 0
01:48:41:  * Number of boolean constants for geometry programs: 0
01:48:41:  * Tesselation Hull programs: no
01:48:41:  * Number of floating-point constants for tesselation hull programs: 0
01:48:41:  * Number of integer constants for tesselation hull programs: 0
01:48:41:  * Number of boolean constants for tesselation hull programs: 0
01:48:41:  * Tesselation Domain programs: no
01:48:41:  * Number of floating-point constants for tesselation domain programs: 0
01:48:41:  * Number of integer constants for tesselation domain programs: 0
01:48:41:  * Number of boolean constants for tesselation domain programs: 0
01:48:41:  * Compute programs: no
01:48:41:  * Number of floating-point constants for compute programs: 0
01:48:41:  * Number of integer constants for compute programs: 0
01:48:41:  * Number of boolean constants for compute programs: 0
01:48:41:  * Supported Shader Profiles: arbfp1 arbvp1 fp20 fp30 fp40 glsl gp4fp gp4gp gp4vp gpu_fp gpu_gp gpu_vp nvgp4 vp30 vp40
01:48:41:  * Texture Compression: yes
01:48:41:    - DXT: yes
01:48:41:    - VTC: yes
01:48:41:    - PVRTC: no
01:48:41:    - ATC: no
01:48:41:    - ETC1: no
01:48:41:    - ETC2: no
01:48:41:    - BC4/BC5: no
01:48:41:    - BC6H/BC7: no
01:48:41:  * Scissor Rectangle: yes
01:48:41:  * Hardware Occlusion Query: yes
01:48:41:  * User clip planes: yes
01:48:41:  * VET_UBYTE4 vertex element type: yes
01:48:41:  * Infinite far plane projection: yes
01:48:41:  * Hardware render-to-texture: yes
01:48:41:  * Floating point textures: yes
01:48:41:  * Non-power-of-two textures: yes
01:48:41:  * 1d textures: yes
01:48:41:  * Volume textures: yes
01:48:41:  * Multiple Render Targets: 8
01:48:41:    - With different bit depths: yes
01:48:41:  * Point Sprites: yes
01:48:41:  * Extended point parameters: yes
01:48:41:  * Max Point Size: 2047
01:48:41:  * Vertex texture fetch: yes
01:48:41:  * Number of world matrices: 0
01:48:41:  * Number of texture units: 16
01:48:41:  * Stencil buffer depth: 8
01:48:41:  * Number of vertex blend matrices: 0
01:48:41:    - Max vertex textures: 32
01:48:41:    - Vertex textures shared: yes
01:48:41:  * Render to Vertex Buffer : yes
01:48:41:  * Hardware Atomic Counters: no
01:48:41:  * GL 1.5 without VBO workaround: no
01:48:41:  * Frame Buffer objects: yes
01:48:41:  * Frame Buffer objects (ARB extension): no
01:48:41:  * Frame Buffer objects (ATI extension): no
01:48:41:  * PBuffer support: yes
01:48:41:  * GL 1.5 without HW-occlusion workaround: no
01:48:41:  * Vertex Array Objects: no
01:48:41:  * Separate shader objects: no
01:48:41: DefaultWorkQueue('Root') initialising on thread 7fb9c02d5840.
01:48:41: DefaultWorkQueue('Root')::WorkerFunc - thread 7fb9acede700 starting.
01:48:41: DefaultWorkQueue('Root')::WorkerFunc - thread 7fb9a53eb700 starting.
01:48:41: DefaultWorkQueue('Root')::WorkerFunc - thread 7fb9a4bea700 starting.
01:48:41: Particle Renderer Type 'billboard' registered
01:48:41: Parsing scripts for resource group Autodetect
01:48:41: Finished parsing scripts for resource group Autodetect
01:48:41: Creating resources for group Autodetect
01:48:41: All done
01:48:41: Parsing scripts for resource group Fonts
01:48:41: Finished parsing scripts for resource group Fonts
01:48:41: Creating resources for group Fonts
01:48:41: All done
01:48:41: Parsing scripts for resource group General
01:48:41: DefaultWorkQueue('Root')::WorkerFunc - thread 7fb99ffff700 starting.
01:48:41: Parsing script wallpaper.material
01:48:41: Parsing script Scene.material
01:48:41: Parsing script Ground.material
01:48:41: Parsing script MatBotones.material
01:48:41: Parsing script Material.005.material
01:48:41: Parsing script MatBotas.material
01:48:41: Parsing script MatRueda.material
01:48:41: Parsing script MatCinturon.material
01:48:41: Parsing script MatNegroBot.material
01:48:41: Parsing script MatHebilla.material
01:48:41: Parsing script MatTorusAspiradora.material
01:48:41: Parsing script MatSombrero2.material
01:48:41: Parsing script MatSombrero.material
01:48:41: Parsing script MatBotonesAsp.material
01:48:41: Parsing script MatBlancoRueda.material
01:48:41: Parsing script MatCorreas.material
01:48:41: Parsing script MatBufanda.material
01:48:41: Parsing script MatOjos.material
01:48:41: Parsing script MatPelo.material
01:48:41: Parsing script MatCara.material
01:48:41: Parsing script MatAbrigo.material
01:48:41: Parsing script MatBotAspiradora.material
01:48:41: Parsing script MatAspiradora.material
01:48:41: Parsing script MatEnergia.material
01:48:41: Parsing script MatCuerpo.material
01:48:41: Parsing script MatCejas.material
01:48:41: Parsing script MatEyes.material
01:48:41: Parsing script matOutside.material
01:48:41: Parsing script floorBedroom.material
01:48:41: Parsing script matSalon.material
01:48:41: Parsing script matCeiling.material
01:48:41: Parsing script matKitchen.material
01:48:41: Parsing script floorBathroom.material
01:48:41: Parsing script matBathroom.material
01:48:41: Parsing script floorKitchen.material
01:48:41: Parsing script matBedroom.material
01:48:41: Parsing script matHall.material
01:48:41: Parsing script floorSalon.material
01:48:41: Parsing script floorHall.material
01:48:41: Parsing script MaterialSkybox.material
01:48:41: Parsing script MatRay.material
01:48:41: Finished parsing scripts for resource group General
01:48:41: Creating resources for group General
01:48:41: All done
01:48:41: Parsing scripts for resource group Imagesets
01:48:41: Finished parsing scripts for resource group Imagesets
01:48:41: Creating resources for group Imagesets
01:48:41: All done
01:48:41: Parsing scripts for resource group Internal
01:48:41: Finished parsing scripts for resource group Internal
01:48:41: Creating resources for group Internal
01:48:41: All done
01:48:41: Parsing scripts for resource group Layouts
01:48:41: Finished parsing scripts for resource group Layouts
01:48:41: Creating resources for group Layouts
01:48:41: All done
01:48:41: Parsing scripts for resource group LookNFeel
01:48:41: Finished parsing scripts for resource group LookNFeel
01:48:41: Creating resources for group LookNFeel
01:48:41: All done
01:48:41: Parsing scripts for resource group Schemes
01:48:41: Finished parsing scripts for resource group Schemes
01:48:41: Creating resources for group Schemes
01:48:41: All done
01:48:41: Registering ResourceManager for type Track
01:48:41: Registering ResourceManager for type SoundFX
01:48:41: Texture: Intro.png: Loading 1 faces(PF_A8R8G8B8,1000x1500x1) with 10 hardware generated mipmaps from Image. Internal format is PF_A8R8G8B8,1000x1500x1.
01:48:41: Mesh: Loading personaje.mesh.
01:48:41: Skeleton: Loading personaje.skeleton
01:48:41: Texture: spiral1.jpg: Loading 1 faces(PF_R8G8B8,4961x3508x1) with 12 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,4961x3508x1.
01:48:42: Texture: circle-153265.png: Loading 1 faces(PF_A8R8G8B8,1920x1901x1) with 10 hardware generated mipmaps from Image. Internal format is PF_A8R8G8B8,1920x1901x1.
01:48:43: Mesh: Loading ghost.mesh.
01:48:43: Skeleton: Loading ghost.skeleton
01:48:43: Texture: Blue.png: Loading 1 faces(PF_A8R8G8B8,200x226x1) with 7 hardware generated mipmaps from Image. Internal format is PF_A8R8G8B8,200x226x1.
01:48:44: Mesh: Loading tablero.mesh.
01:48:44: Texture: matBedroom.jpg: Loading 1 faces(PF_R8G8B8,376x550x1) with 9 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,376x550x1.
01:48:44: Texture: matKitchen.jpg: Loading 1 faces(PF_R8G8B8,600x600x1) with 9 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,600x600x1.
01:48:44: Texture: matBathroom.jpg: Loading 1 faces(PF_R8G8B8,3029x3030x1) with 11 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,3029x3030x1.
01:48:45: Texture: matSalon.jpg: Loading 1 faces(PF_R8G8B8,1024x768x1) with 10 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,1024x768x1.
01:48:45: Texture: matHall.tga: Loading 1 faces(PF_R8G8B8,1024x1024x1) with 10 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,1024x1024x1.
01:48:45: Texture: room1.png: Loading 1 faces(PF_A8R8G8B8,1024x1024x1) with 10 hardware generated mipmaps from Image. Internal format is PF_A8R8G8B8,1024x1024x1.
01:48:45: Texture: room2.png: Loading 1 faces(PF_A8R8G8B8,1024x1024x1) with 10 hardware generated mipmaps from Image. Internal format is PF_A8R8G8B8,1024x1024x1.
01:48:45: Texture: room3.png: Loading 1 faces(PF_A8R8G8B8,1024x1024x1) with 10 hardware generated mipmaps from Image. Internal format is PF_A8R8G8B8,1024x1024x1.
01:48:45: Texture: room4.png: Loading 1 faces(PF_A8R8G8B8,1024x1024x1) with 10 hardware generated mipmaps from Image. Internal format is PF_A8R8G8B8,1024x1024x1.
01:48:45: Texture: room5.png: Loading 1 faces(PF_A8R8G8B8,1024x1024x1) with 10 hardware generated mipmaps from Image. Internal format is PF_A8R8G8B8,1024x1024x1.
01:48:45: Texture: exterior.png: Loading 1 faces(PF_A8R8G8B8,1024x1024x1) with 10 hardware generated mipmaps from Image. Internal format is PF_A8R8G8B8,1024x1024x1.
01:48:45: Texture: rip_fr.tga: Loading 1 faces(PF_R8G8B8,512x512x1) with 9 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,512x512x1.
01:48:45: Texture: rip_bk.tga: Loading 1 faces(PF_R8G8B8,512x512x1) with 9 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,512x512x1.
01:48:45: Texture: rip_lf.tga: Loading 1 faces(PF_R8G8B8,512x512x1) with 9 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,512x512x1.
01:48:45: Texture: rip_rt.tga: Loading 1 faces(PF_R8G8B8,512x512x1) with 9 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,512x512x1.
01:48:45: Texture: rip_up.tga: Loading 1 faces(PF_R8G8B8,512x512x1) with 9 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,512x512x1.
01:48:45: Texture: rip_dn.tga: Loading 1 faces(PF_R8G8B8,512x512x1) with 9 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,512x512x1.
01:48:45: Mesh: Loading ray.mesh.
01:49:19: DefaultWorkQueue('Root') shutting down on thread 7fb9c02d5840.
01:49:19: DefaultWorkQueue('Root')::WorkerFunc - thread 7fb9acede700 stopped.
01:49:19: DefaultWorkQueue('Root')::WorkerFunc - thread 7fb9a53eb700 stopped.
01:49:19: DefaultWorkQueue('Root')::WorkerFunc - thread 7fb9a4bea700 stopped.
01:49:19: DefaultWorkQueue('Root')::WorkerFunc - thread 7fb99ffff700 stopped.
01:49:19: *-*-* OGRE Shutdown
01:49:19: Unregistering ResourceManager for type Compositor
01:49:19: Unregistering ResourceManager for type Skeleton
01:49:19: Unregistering ResourceManager for type Mesh
01:49:19: Unregistering ResourceManager for type HighLevelGpuProgram
01:49:19: Uninstalling plugin: GL RenderSystem
01:49:19: Unregistering ResourceManager for type GpuProgram
01:49:19: ******************************
*** Stopping GLX Subsystem ***
******************************
01:49:19: Unregistering ResourceManager for type Texture
01:49:19: Plugin successfully uninstalled
01:49:19: Unloading library /usr/lib/x86_64-linux-gnu/OGRE-1.9.0/RenderSystem_GL
01:49:19: Unregistering ResourceManager for type Material
